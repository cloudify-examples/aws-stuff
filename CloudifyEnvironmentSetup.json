{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "AwsAccessKeyId": {
            "Type": "String",
            "Description": "The aws_access_key_id that you want your Manager to create AWS resources with."
        },
        "AwsSecretAccessKey": {
            "Type": "String",
            "Description": "The aws_secret_access_key that you want your Manager to create AWS resources with."
        },
        "Plugins": {
            "Type": "String",
            "Description": "The plugins to upload to the Manager.",
            "Default": "https://github.com/cloudify-incubator/cloudify-utilities-plugin/releases/download/1.3.0/cloudify_utilities_plugin-1.3.0-py27-none-linux_x86_64-centos-Core.wgn https://github.com/cloudify-incubator/cloudify-utilities-plugin/releases/download/1.2.5/cloudify_utilities_plugin-1.2.5-py27-none-linux_x86_64-centos-Core.wgn https://github.com/cloudify-incubator/cloudify-kubernetes-plugin/releases/download/1.2.0/cloudify_kubernetes_plugin-1.2.0-py27-none-linux_x86_64-centos-Core.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-diamond-plugin/1.3.5/cloudify_diamond_plugin-1.3.5-py27-none-linux_x86_64-centos-Core.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-diamond-plugin/1.3.5/cloudify_diamond_plugin-1.3.5-py27-none-linux_x86_64-Ubuntu-trusty.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-fabric-plugin/1.5/cloudify_fabric_plugin-1.5-py27-none-linux_x86_64-centos-Core.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-aws-plugin/1.5/cloudify_aws_plugin-1.5-py27-none-linux_x86_64-centos-Core.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-aws-plugin/1.4.13/cloudify_aws_plugin-1.4.13-py27-none-linux_x86_64-centos-Core.wgn https://github.com/cloudify-incubator/cloudify-awssdk-plugin/releases/download/1.0.0/cloudify_awssdk_plugin-1.0.0-py27-none-any-none-none.wgn https://github.com/cloudify-cosmo/cloudify-openstack-plugin/releases/download/2.2.0/cloudify_openstack_plugin-2.2.0-py27-none-linux_x86_64-centos-Core.wgn https://github.com/cloudify-incubator/cloudify-azure-plugin/releases/download/1.4.3/cloudify_azure_plugin-1.4.3-py27-none-linux_x86_64.wgn"
        }
    },
    "Mappings" : {
        "RegionMap" : {
            "us-east-1": {
                "Name": "N. Virgina",
                "RegionEndpoint": "ec2.us-east-1.amazonaws.com",
                "NumAZs": "4",
                "AZ0": "0",
                "AZ1": "1",
                "AZ2": "2",
                "CentosCore": "ami-72667b65",
                "UbuntuTrusty": "ami-841f46ff",
                "CfyAMI" : "ami-ab210ed0"
            },
            "us-west-1": {
                "Name": "N. California",
                "RegionEndpoint": "ec2.us-west-1.amazonaws.com",
                "NumAZs": "2",
                "AZ0": "0",
                "AZ1": "1",
                "AZ2": "0",
                "CentosCore": "ami-36f7a656",
                "UbuntuTrusty": "ami-b2527ad2",
                "CfyAMI" : "ami-58361d38"
            },
            "eu-west-1": {
                "Name": "Ireland",
                "RegionEndpoint": "ec2.eu-west-1.amazonaws.com",
                "NumAZs": "3",
                "AZ0": "0",
                "AZ1": "1",
                "AZ2": "2",
                "CentosCore": "ami-98072aeb",
                "UbuntuTrusty": "ami-1e749f67",
                "CfyAMI" : "ami-6a23d513"
            },
            "ap-southeast-1": {
                "Name": "Singapore",
                "RegionEndpoint": "ec2.ap-southeast-1.amazonaws.com",
                "NumAZs": "2",
                "AZ0": "0",
                "AZ1": "1",
                "AZ2": "0",
                "CentosCore": "ami-6baa0308",
                "UbuntuTrusty": "ami-49b5282a",
                "CfyAMI" : "ami-60039a03"
            },
            "ap-northeast-1": {
                "Name": "Tokyo",
                "RegionEndpoint": "ec2.ap-northeast-1.amazonaws.com",
                "NumAZs": "2",
                "AZ0": "0",
                "AZ1": "1",
                "AZ2": "0",
                "CentosCore": "ami-b2fd89d5",
                "UbuntuTrusty": "ami-2e866b48",
                "CfyAMI" : "ami-4f27cc29"
            },
            "sa-east-1": {
                "Name": "Sao Paulo",
                "RegionEndpoint": "ec2.sa-east-1.amazonaws.com",
                "NumAZs": "3",
                "AZ0": "0",
                "AZ1": "1",
                "AZ2": "2",
                "CentosCore": "ami-d1ee75bd",
                "UbuntuTrusty": "ami-4c93e420",
                "CfyAMI" :"ami-d195e3bd"
            }
        }
    },
    "Resources": {
        "CfyVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock" : "10.10.0.0/16",
                "Tags" : [ {"Key" : "CloudifyEnvironmentVersion", "Value" : "1.0"} ]
            }
        },
        "CfyVPCInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags" : [ {"Key" : "CloudifyEnvironmentVersion", "Value" : "1.0"} ]
            }
        },
        "CfyVPCInternetGatewayAttachment" : {
           "Type" : "AWS::EC2::VPCGatewayAttachment",
           "Properties" : {
             "VpcId" : { "Ref" : "CfyVPC" },
             "InternetGatewayId" : { "Ref" : "CfyVPCInternetGateway" }
           }
        },
        "CfyManagerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Cloudify Manager Security Group",
                "VpcId" : {
                    "Ref" : "CfyVPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "icmp",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "CidrIp" : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "22",
                        "ToPort" : "22",
                        "CidrIp" : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "80",
                        "ToPort" : "80",
                        "CidrIp" : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "443",
                        "ToPort" : "443",
                        "CidrIp" : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "5671",
                        "ToPort" : "5671",
                        "CidrIp" : {
                            "Fn::GetAtt": [
                                "CfyVPC",
                                "CidrBlock"
                            ]
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "8101",
                        "ToPort" : "8101",
                        "CidrIp" : {
                            "Fn::GetAtt": [
                                "CfyVPC",
                                "CidrBlock"
                            ]
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "8300",
                        "ToPort" : "8300",
                        "CidrIp" : {
                            "Fn::GetAtt": [
                                "CfyVPC",
                                "CidrBlock"
                            ]
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "8301",
                        "ToPort" : "8301",
                        "CidrIp" : {
                            "Fn::GetAtt": [
                                "CfyVPC",
                                "CidrBlock"
                            ]
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "8500",
                        "ToPort" : "8500",
                        "CidrIp" : {
                            "Fn::GetAtt": [
                                "CfyVPC",
                                "CidrBlock"
                            ]
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "15432",
                        "ToPort" : "15432",
                        "CidrIp" : {
                            "Fn::GetAtt": [
                                "CfyVPC",
                                "CidrBlock"
                            ]
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "22000",
                        "ToPort" : "22000",
                        "CidrIp" : {
                            "Fn::GetAtt": [
                                "CfyVPC",
                                "CidrBlock"
                            ]
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "53333",
                        "ToPort" : "53333",
                        "CidrIp" : {
                            "Fn::GetAtt": [
                                "CfyVPC",
                                "CidrBlock"
                            ]
                        }
                    }
                ],
                "Tags" : [ {"Key" : "CloudifyEnvironmentVersion", "Value" : "1.0"} ]
            }
        },
        "CfyVPCPrivateSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "CfyVPC"
                },
                "AvailabilityZone" : {
                    "Fn::Select" : [
                        {
                            "Fn::FindInMap": [
                                "RegionMap", { "Ref": "AWS::Region" },
                                "AZ2"
                            ]
                        },
                        {
                            "Fn::GetAZs" : {
                                "Ref" : "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock" : "10.10.0.0/24",
                "Tags" : [ {"Key" : "CloudifyEnvironmentVersion", "Value" : "1.0"} ]
            }
        },
        "CfyVPCPublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "CfyVPC"
                },
                "AvailabilityZone" : {
                    "Fn::Select" : [
                        {
                            "Fn::FindInMap": [
                                "RegionMap", { "Ref": "AWS::Region" },
                                "AZ2"
                            ]
                        },
                        {
                            "Fn::GetAZs" : {
                                "Ref" : "AWS::Region"
                            }
                        }
                    ]
                },
                "CidrBlock" : "10.10.1.0/24",
                "Tags" : [ {"Key" : "CloudifyEnvironmentVersion", "Value" : "1.0"} ]
            }
        },
        "CfyVPCPrivateSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "CfyVPC"
                },
                "Tags" : [ {"Key" : "CloudifyEnvironmentVersion", "Value" : "1.0"} ]
            }
        },
        "CfyVPCPublicSubnetRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "CfyVPC"
                },
                "Tags" : [ {"Key" : "CloudifyEnvironmentVersion", "Value" : "1.0"} ]
            }
        },
        "CfyVPCPrivateSubnetRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "CfyVPCPrivateSubnet" },
                "RouteTableId" : { "Ref" : "CfyVPCPrivateSubnetRouteTable" }
            }
        },
        "CfyVPCPublicSubnetRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "CfyVPCPublicSubnet" },
                "RouteTableId" : { "Ref" : "CfyVPCPublicSubnetRouteTable" }
            }
        },
        "CfyVPCPublicSubnetRouteToInternetGateway": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId" : { "Ref" : "CfyVPCPublicSubnetRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "CfyVPCInternetGateway" }
            }
        },
        "CfyVPCNatGatewayEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "CfyVpcNatGateway": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId" : { "Fn::GetAtt" : ["CfyVPCNatGatewayEIP", "AllocationId"]},
                "SubnetId" : { "Ref" : "CfyVPCPublicSubnet"}
            }
        },
        "CfyVPCPrivateSubnetRouteToNatGateway": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId" : { "Ref" : "CfyVPCPrivateSubnetRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "CfyVpcNatGateway" }
            }
        },
        "CfyManagerNIC": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId" : { "Ref" : "CfyVPCPublicSubnet" },
                "GroupSet" : [ {"Ref" : "CfyManagerSecurityGroup"} ],
                "Tags" : [ {"Key" : "CloudifyEnvironmentVersion", "Value" : "1.0"} ]
            }
        },
        "CfyManagerEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "CfyManagerNICAssociationEIP" : {
            "Type" : "AWS::EC2::EIPAssociation",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : [ "CfyManagerEIP", "AllocationId" ]},
                "NetworkInterfaceId" : { "Ref" : "CfyManagerNIC" }
            }
        },
        "CfyManagerVM": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap", { "Ref": "AWS::Region" },
                        "CfyAMI"
                    ]
                },
                "InstanceType": "m3.large",
                "NetworkInterfaces" : [
                    { "NetworkInterfaceId" : {"Ref" : "CfyManagerNIC"}, "DeviceIndex" : "0" }
                ],
                "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash -xe\n",
                    "\n",
                    "until cfy status;\n",
                    "do sleep 3; \n",
                    "done\n",
                    "sleep 15\n",
                    "function run_until_success {\n",
                    "    COUNTER=0\n",
                    "    while true; do\n",
                    "    sleep 3\n",
                    "    eval $1\n",
                    "    if [ $? -eq 0 ] || [ $COUNTER -eq 10 ]; then\n",
                    "        return $?\n",
                    "    fi\n",
                    "    let COUNTER=COUNTER+1\n",
                    "    done\n",
                    "}\n",
                    "run_until_success \"cfy profiles use -u admin -p admin -t default_tenant ", {"Ref" : "CfyManagerEIP"}, "\"\n",
                    "run_until_success \"cfy secrets create aws_access_key_id -s ", { "Ref": "AwsAccessKeyId" }, "\"\n",
                    "run_until_success \"cfy secrets create aws_secret_access_key -s ", {  "Ref": "AwsSecretAccessKey" }, "\"\n",
                    "run_until_success \"cfy secrets create ec2_region_name -s ", { "Ref": "AWS::Region" }, "\"\n",
                    "run_until_success \"cfy secrets create ec2_region_endpoint -s ", { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "RegionEndpoint" ] }, "\"\n",
                    "run_until_success \"cfy secrets create vpc_id -s ", { "Ref": "CfyVPC" }, "\"\n",
                    "run_until_success \"cfy secrets create private_subnet_id -s ", { "Ref": "CfyVPCPrivateSubnet" }, "\"\n",
                    "run_until_success \"cfy secrets create public_subnet_id -s ", { "Ref": "CfyVPCPublicSubnet" }, "\"\n",
                    "run_until_success \"cfy secrets create ubuntu_trusty_image -s ", { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "UbuntuTrusty" ] }, "\"\n",
                    "run_until_success \"cfy secrets create centos_core_image -s ", { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "CentosCore" ] }, "\"\n",
                    "run_until_success \"cfy secrets create availability_zone -s ", { "Fn::Select" : [ { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "AZ2" ] }, { "Fn::GetAZs": { "Ref": "AWS::Region" } } ] }, "\"\n",
                    "for i in ", { "Ref": "Plugins" }, ";\n",
                    "do run_until_success \"cfy plugins upload $i;\"\n",
                    "sleep 3;\n",
                    "done\n",
                    "run_until_success \"cfy install https://github.com/cloudify-incubator/cloudify-utilities-plugin/archive/1.3.0.zip -n cloudify_ssh_key/examples/create-secret-agent-key.yaml -b agent_key\"\n",
                    "\n"
                ]]}},
                "Tags" : [ {"Key" : "CloudifyEnvironmentVersion", "Value" : "1.0"} ]
            }
        }
    }
}
