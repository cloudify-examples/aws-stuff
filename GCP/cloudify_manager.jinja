resources:
  - type: compute.v1.network
    name: {{ env["name"] }}-network
    properties:
      autoCreateSubnetworks: false
  - type: compute.v1.subnetworks
    name: {{ env["name"] }}-subnetwork
    properties:
      network: $(ref.{{ env["name"] }}-network.selfLink)
      ipCidrRange: 10.0.0.0/24
      region: {{ properties["region"] }}
  - type: compute.v1.firewall
    name: {{ env["name"] }}-firewall
    properties:
      network: $(ref.{{ env["name"] }}-network.selfLink)
      sourceRanges: [ "0.0.0.0/0" ]
      allowed:
      - IPProtocol: tcp
        ports: [ "22", "80", "443", "5671", "8101", "8086", "8300", "8301", "8500", "15432", "22000", "53333" ]
  - type: compute.v1.instance
    name: {{ env["name"] }}
    properties:
      zone: {{ properties["zone"] }}
      machineType: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/zones/{{ properties["zone"] }}/machineTypes/n1-standard-2
      disks:
      - deviceName: cloudify-manager-disk
        type: PERSISTENT
        boot: true
        mode: READ_WRITE
        autoDelete: true
        initializeParams:
          sourceImage: https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20170816
          diskSizeGb: "10"
      networkInterfaces:
      - network: $(ref.{{ env["name"] }}-network.selfLink)
        subnetwork: $(ref.{{ env["name"] }}-subnetwork.selfLink)
        accessConfigs:
        - name: External NAT
          type: ONE_TO_ONE_NAT
      metadata:
        items:
        - key: subnet
          value: $(ref.{{ env["name"] }}-subnetwork.selfLink)
        - key: region
          value: {{ properties["region"] }}
        - key: startup-script
          value: |
            #!/bin/bash -xe
            function run_until_success {
                COUNTER=0
                while true; do
                    sleep 3
                    eval $1
                    if [ $? -eq 0 ] || [ $COUNTER -eq 10 ]; then
                        return $?
                    fi
                    let COUNTER=COUNTER+1
                done
            }
            USERNAME=$(curl -s -H "Metadata-Flavor: Google" -X GET "http://metadata.google.internal/computeMetadata/v1/project/attributes/sshKeys" | cut --delimiter ":" --fields 1)
            run_until_success "id -u $USERNAME"
            PUBLIC_IP=$(curl -H "Metadata-Flavor: Google" -X GET "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip")
            PRIVATE_IP=$(curl -H "Metadata-Flavor: Google" -X GET "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip")
            PLUGINS_LIST="http://repository.cloudifysource.org/cloudify/wagons/cloudify-gcp-plugin/1.0/cloudify_gcp_plugin-1.0-py27-none-linux_x86_64-centos-Core.wgn https://github.com/cloudify-incubator/cloudify-utilities-plugin/releases/download/1.3.0/cloudify_utilities_plugin-1.3.0-py27-none-linux_x86_64-centos-Core.wgn https://github.com/cloudify-incubator/cloudify-utilities-plugin/releases/download/1.2.5/cloudify_utilities_plugin-1.2.5-py27-none-linux_x86_64-centos-Core.wgn https://github.com/cloudify-incubator/cloudify-kubernetes-plugin/releases/download/1.2.0/cloudify_kubernetes_plugin-1.2.0-py27-none-linux_x86_64-centos-Core.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-diamond-plugin/1.3.5/cloudify_diamond_plugin-1.3.5-py27-none-linux_x86_64-centos-Core.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-diamond-plugin/1.3.5/cloudify_diamond_plugin-1.3.5-py27-none-linux_x86_64-Ubuntu-trusty.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-fabric-plugin/1.5/cloudify_fabric_plugin-1.5-py27-none-linux_x86_64-centos-Core.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-aws-plugin/1.5/cloudify_aws_plugin-1.5-py27-none-linux_x86_64-centos-Core.wgn http://repository.cloudifysource.org/cloudify/wagons/cloudify-aws-plugin/1.4.13/cloudify_aws_plugin-1.4.13-py27-none-linux_x86_64-centos-Core.wgn https://github.com/cloudify-incubator/cloudify-awssdk-plugin/releases/download/1.0.0/cloudify_awssdk_plugin-1.0.0-py27-none-any-none-none.wgn https://github.com/cloudify-cosmo/cloudify-openstack-plugin/releases/download/2.2.0/cloudify_openstack_plugin-2.2.0-py27-none-linux_x86_64-centos-Core.wgn https://github.com/cloudify-incubator/cloudify-azure-plugin/releases/download/1.4.3/cloudify_azure_plugin-1.4.3-py27-none-linux_x86_64.wgn"
            ssh-keygen -f /home/$USERNAME/.ssh/key.pem -t rsa -N ''
            cat /home/$USERNAME/.ssh/key.pem.pub >> /home/$USERNAME/.ssh/authorized_keys
            sudo rpm -i http://repository.cloudifysource.org/cloudify/4.1.0/ga-release/cloudify-enterprise-cli-4.1.rpm
            sleep 3
            cfy bootstrap /opt/cfy/cloudify-manager-blueprints/simple-manager-blueprint.yaml -i public_ip=$PUBLIC_IP -i private_ip=$PRIVATE_IP -i ssh_user=$USERNAME -i ssh_key_filename=/home/$USERNAME/.ssh/key.pem -i ignore_bootstrap_validations=false -i admin_username=admin -i admin_password=admin
            run_until_success "cfy profiles use -u admin -p admin -t default_tenant $PUBLIC_IP"
            run_until_success "cfy status"
            sleep 15
            run_until_success 'cfy secrets create gcp_zone -s $(curl -H "Metadata-Flavor: Google" -X GET "http://metadata.google.internal/computeMetadata/v1/instance/zone")'
            run_until_success 'cfy secrets create region -s $(curl -H "Metadata-Flavor: Google" -X GET "http://metadata.google.internal/computeMetadata/v1/instance/attributes/region")'
            run_until_success 'cfy secrets create gcp_project_name -s $(curl -H "Metadata-Flavor: Google" -X GET "http://metadata.google.internal/computeMetadata/v1/project/numeric-project-id")'
            run_until_success 'cfy secrets create gcp_management_network_name -s $(curl -H "Metadata-Flavor: Google" -X GET "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/network")'
            run_until_success 'cfy secrets create gcp_management_subnetwork_name -s $(curl -H "Metadata-Flavor: Google" -X GET "http://metadata.google.internal/computeMetadata/v1/instance/attributes/subnet")'
            run_until_success 'cfy secrets create gcp_private_subnetwork_name -s $(curl -H "Metadata-Flavor: Google" -X GET "http://metadata.google.internal/computeMetadata/v1/instance/attributes/subnet")'
            run_until_success 'cfy secrets create centos_core_image -s "https://www.googleapis.com/compute/v1/projects/centos-cloud/global/images/centos-7-v20170816"'
            run_until_success 'cfy secrets create ubuntu_trusty_image -s "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1404-trusty-v20170818"'
            run_until_success 'cfy secrets create gcp_small_instance_type -s n1-standard-2'
            for i in $PLUGINS_LIST;
                do run_until_success "cfy plugins upload $i";
                sleep 3;
            done
            run_until_success "cfy install https://github.com/cloudify-incubator/cloudify-utilities-plugin/archive/1.3.0.zip -n cloudify_ssh_key/examples/create-secret-agent-key.yaml -b agent_key"
